{"version":3,"sources":["components/ButtonWithIcon.js","components/Input.js","App.js","serviceWorker.js","index.js"],"names":["Icon","className","ButtonWithIcon","label","icon","Input","name","type","hasError","errorMsg","borderColor","class","placeholder","App","style","height","width","action","onSubmit","e","preventDefault","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uPAEA,SAASA,IACP,OAAO,yBAAKC,UAAU,8BAGT,SAASC,EAAT,GAAqD,IAA3BC,EAA0B,EAA1BA,MAA0B,IAAnBC,YAAmB,MAAZ,kBAACJ,EAAD,MAAY,EACjE,OACE,yBAAKC,UAAU,qBACZG,EACD,yBAAKH,UAAU,2BAA2BE,ICRjC,SAASE,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,KACAJ,EAGC,EAHDA,MAGC,IAFDK,gBAEC,aADDC,gBACC,MADU,mBACV,EACKC,EAAcF,EAAW,iBAAmB,kBAElD,OACE,6BACE,2BACEG,MAAK,iCAA4BD,EAA5B,+FACLJ,KAAMA,EACNC,KAAMA,EACNK,YAAaT,IAEdK,EAAW,yBAAKP,UAAU,wBAAwBQ,GAAkB,MCuD5DI,MArEf,WACE,OACE,yBAAKZ,UAAU,0BACb,yBAAKA,UAAU,6DACb,yBACEa,MAAO,CAAEC,OAAQ,QAASC,MAAO,SACjCf,UAAU,kDAEV,wBAAIA,UAAU,sBAAd,gFAGA,uBAAGA,UAAU,6BAAb,sEAIA,yBAAKA,UAAU,2CACb,kBAACC,EAAD,CAAgBC,MAAM,eACtB,kBAACD,EAAD,CAAgBC,MAAM,aACtB,kBAACD,EAAD,CAAgBC,MAAM,cAI5B,yBAAKF,UAAU,6DACb,yBACEa,MAAO,CAAEC,OAAQ,QAASC,MAAO,SACjCf,UAAU,wDAEV,wBAAIA,UAAU,wBAAd,qBACA,0BAAMgB,OAAO,IAAIC,SAAU,SAACC,GAAD,OAAOA,EAAEC,mBAClC,yBAAKnB,UAAU,gCACb,kBAACI,EAAD,CAAOC,KAAK,aAAaC,KAAK,OAAOJ,MAAM,eAC3C,kBAACE,EAAD,CAAOC,KAAK,YAAYC,KAAK,OAAOJ,MAAM,cAC1C,kBAACE,EAAD,CACEC,KAAK,QACLC,KAAK,QACLJ,MAAM,QACNK,UAAQ,EACRC,SAAS,2BAEX,kBAACJ,EAAD,CAAOC,KAAK,eAAeC,KAAK,OAAOJ,MAAM,kBAE/C,yBAAKF,UAAU,QACb,2BAAOU,MAAM,WACX,2BAAOJ,KAAK,QAAQI,MAAM,aAAaL,KAAK,UAC5C,0BAAMK,MAAM,QAAZ,mCACA,0BAAMV,UAAU,8CAAhB,0BAKJ,4BACEM,KAAK,SACLN,UAAU,iGAFZ,YAMA,yBAAKA,UAAU,gBACb,0BAAMU,MAAM,QAAZ,uBACA,0BAAMV,UAAU,+CAAhB,iBCnDMoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.97b8dff3.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Icon() {\n  return <div className=\"bg-white rounded-full p-2\"></div>;\n}\n\nexport default function ButtonWithIcon({ label, icon = <Icon /> }) {\n  return (\n    <div className=\"flex items-center\">\n      {icon}\n      <div className=\"ml-1 text-white text-sm\">{label}</div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Input({\n  name,\n  type,\n  label,\n  hasError = false,\n  errorMsg = \"An error occured\",\n}) {\n  const borderColor = hasError ? \"border-red-400\" : \"border-gray-700\";\n\n  return (\n    <div>\n      <input\n        class={`appearance-none border ${borderColor} rounded-lg w-full p-3 text-gray-700 leading-tight focus:outline-none focus:border-blue-500`}\n        name={name}\n        type={type}\n        placeholder={label}\n      />\n      {hasError ? <div className=\"text-sm text-red-400\">{errorMsg}</div> : null}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport ButtonWithIcon from \"./components/ButtonWithIcon\";\nimport Input from \"./components/Input\";\n\nfunction App() {\n  return (\n    <div className=\"h-screen flex relative\">\n      <div className=\"h-full flex items-center justify-end w-5/12 bg-indigo-900\">\n        <div\n          style={{ height: \"540px\", width: \"400px\" }}\n          className=\"bg-blue-500 shadow-xl rounded-l-md py-24 px-16\"\n        >\n          <h2 className=\"text-white text-xl\">\n            Here’s some amazing copy. Doesn’t this copy just make you excited?\n          </h2>\n          <p className=\"my-6 text-white text-base\">\n            Wow, you really built this form in 2-3 hours? You’re awesome.\n          </p>\n\n          <div className=\"flex flex-col justify-between space-y-4\">\n            <ButtonWithIcon label=\"Write Code\" />\n            <ButtonWithIcon label=\"Fix Bugs\" />\n            <ButtonWithIcon label=\"Profit\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"h-full flex items-center justify-start w-7/12 bg-blue-100\">\n        <div\n          style={{ height: \"540px\", width: \"500px\" }}\n          className=\"h-64 w-24 bg-white shadow-xl rounded-r-md py-8 px-16\"\n        >\n          <h2 className=\"text-2xl font-medium\">Create an Account</h2>\n          <form action=\"#\" onSubmit={(e) => e.preventDefault()}>\n            <div className=\"mt-8 flex flex-col space-y-6\">\n              <Input name=\"first_name\" type=\"text\" label=\"First Name\" />\n              <Input name=\"last_name\" type=\"text\" label=\"Last Name\" />\n              <Input\n                name=\"email\"\n                type=\"email\"\n                label=\"Email\"\n                hasError\n                errorMsg=\"Incorrect Email Format\"\n              />\n              <Input name=\"phone_number\" type=\"text\" label=\"Phone Number\" />\n            </div>\n            <div className=\"my-4\">\n              <label class=\"text-sm\">\n                <input type=\"radio\" class=\"form-radio\" name=\"terms\" />\n                <span class=\"ml-2\">I agree to write Excellent Code</span>\n                <span className=\"ml-1 text-blue-400 font-bold cursor-poiter\">\n                  Terms and Conditions\n                </span>\n              </label>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"w-full py-2 text-white bg-blue-400 hover:bg-blue-500 rounded-lg shadow-lg focus:outline-none \"\n            >\n              Continue\n            </button>\n            <div className=\"mt-4 text-sm\">\n              <span class=\"ml-2\">Already a meme-ber?</span>\n              <span className=\"ml-1 text-blue-400 font-bold cursor-pointer\">\n                Sign In\n              </span>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/tailwind.output.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}